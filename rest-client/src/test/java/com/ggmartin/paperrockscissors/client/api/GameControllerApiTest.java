/*
 * Rock Paper Scissors
 * This is a practice with swagger
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ggmartin.paperrockscissors.client.api;

import org.junit.Test;

import com.ggmartin.paperrockscissors.client.ApiException;
import com.ggmartin.paperrockscissors.client.api.GameControllerApi;
import com.ggmartin.paperrockscissors.client.model.GameDTO;
import com.ggmartin.paperrockscissors.client.model.HandTypeDTO;

import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GameControllerApi
 */
@Ignore
public class GameControllerApiTest {

    private final GameControllerApi api = new GameControllerApi();

    
    /**
     * Clean a game
     *
     * Clean a game
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cleanGameTest() throws ApiException {
        Integer id = null;
        GameDTO response = api.cleanGame(id);

        // TODO: test validations
    }
    
    /**
     * Continue a game
     *
     * Continue a game
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void continueGameTest() throws ApiException {
        Integer id = null;
        Integer player1HandId = null;
        Integer player2HandId = null;
        GameDTO response = api.continueGame(id, player1HandId, player2HandId);

        // TODO: test validations
    }
    
    /**
     * Start a game
     *
     * Start a game
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createGameTest() throws ApiException {
        Integer player1HandId = null;
        Integer player2HandId = null;
        GameDTO response = api.createGame(player1HandId, player2HandId);

        // TODO: test validations
    }
    
    /**
     * Catalog of types of hands
     *
     * Catalog of types of hands
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getHandTypesTest() throws ApiException {
        List<HandTypeDTO> response = api.getHandTypes();

        // TODO: test validations
    }
    
}
